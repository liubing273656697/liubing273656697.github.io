<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘兵的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-23T02:57:34.246Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>liubing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql配置</title>
    <link href="http://yoursite.com/2018/05/23/mysql%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/05/23/mysql配置/</id>
    <published>2018-05-23T02:57:08.000Z</published>
    <updated>2018-05-23T02:57:34.246Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="mysql" scheme="http://yoursite.com/categories/mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>GitHub操作指南</title>
    <link href="http://yoursite.com/2018/05/23/GitHub%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2018/05/23/GitHub操作指南/</id>
    <published>2018-05-23T02:53:33.000Z</published>
    <updated>2018-05-23T02:54:19.006Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;注册&quot;&gt;&lt;a href=&quot;#注册&quot; class=&quot;headerlink&quot; title=&quot;注册&quot;&gt;&lt;/a&gt;注册&lt;/h1&gt;
      
    
    </summary>
    
      <category term="GitHub" scheme="http://yoursite.com/categories/GitHub/"/>
    
    
  </entry>
  
  <entry>
    <title>link(常用)</title>
    <link href="http://yoursite.com/2018/05/23/link-%E5%B8%B8%E7%94%A8/"/>
    <id>http://yoursite.com/2018/05/23/link-常用/</id>
    <published>2018-05-23T02:45:11.000Z</published>
    <updated>2018-05-23T02:46:52.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用地址"><a href="#常用地址" class="headerlink" title="常用地址"></a>常用地址</h1><p><a href="http://fanyi.baidu.com/" target="_blank" rel="noopener">百度翻译</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常用地址&quot;&gt;&lt;a href=&quot;#常用地址&quot; class=&quot;headerlink&quot; title=&quot;常用地址&quot;&gt;&lt;/a&gt;常用地址&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://fanyi.baidu.com/&quot; target=&quot;_blank&quot; rel=&quot;noopene
      
    
    </summary>
    
      <category term="link" scheme="http://yoursite.com/categories/link/"/>
    
    
  </entry>
  
  <entry>
    <title>oraclc登陆用户创建objects</title>
    <link href="http://yoursite.com/2018/05/23/oraclc%E7%99%BB%E9%99%86%E7%94%A8%E6%88%B7%E5%88%9B%E5%BB%BAobjects/"/>
    <id>http://yoursite.com/2018/05/23/oraclc登陆用户创建objects/</id>
    <published>2018-05-23T02:39:16.000Z</published>
    <updated>2018-05-23T02:44:39.349Z</updated>
    
    <content type="html"><![CDATA[<p>这里所有操作需要用户登陆,用户myroot,口令123456</p><h1 id="创建函数"><a href="#创建函数" class="headerlink" title="创建函数"></a>创建函数</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里所有操作需要用户登陆,用户myroot,口令123456&lt;/p&gt;
&lt;h1 id=&quot;创建函数&quot;&gt;&lt;a href=&quot;#创建函数&quot; class=&quot;headerlink&quot; title=&quot;创建函数&quot;&gt;&lt;/a&gt;创建函数&lt;/h1&gt;&lt;figure class=&quot;highlight ja
      
    
    </summary>
    
      <category term="oracle" scheme="http://yoursite.com/categories/oracle/"/>
    
    
  </entry>
  
  <entry>
    <title>link(github)</title>
    <link href="http://yoursite.com/2018/05/23/link-github/"/>
    <id>http://yoursite.com/2018/05/23/link-github/</id>
    <published>2018-05-23T02:23:16.000Z</published>
    <updated>2018-05-23T02:26:20.504Z</updated>
    
    <content type="html"><![CDATA[<p>github链接地址<br><a href="https://fengxiuwei.github.io/" target="_blank" rel="noopener">秀秀的博客</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;github链接地址&lt;br&gt;&lt;a href=&quot;https://fengxiuwei.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;秀秀的博客&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="link" scheme="http://yoursite.com/categories/link/"/>
    
    
  </entry>
  
  <entry>
    <title>oracle数据库连接</title>
    <link href="http://yoursite.com/2018/05/22/oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/"/>
    <id>http://yoursite.com/2018/05/22/oracle数据库连接/</id>
    <published>2018-05-22T09:24:53.000Z</published>
    <updated>2018-05-22T09:39:33.467Z</updated>
    
    <content type="html"><![CDATA[<p>有很多软件是直接连数据库的，oracle的好多直接连数据的方式都是采用net manager的。好处就是只要安装了oracle哪怕只是客户端，都很容易实现连接数据库。用起来方便，安全。挺不错的。</p><h1 id="采用net-manager配置"><a href="#采用net-manager配置" class="headerlink" title="采用net manager配置"></a>采用net manager配置</h1><p>1,首先确认安装了oracle，8、9、10什么的哪个版本都行，最低也要安装个oracle的客户端。<br><img src="/images/oracle/create/connet/1.png" alt="oracle图片"><br>2,选择netmanager进行如图所示界面<br><img src="/images/oracle/create/connet/2.png" alt="oracle图片"><br>3,打开本地，进入服务命名<br><img src="/images/oracle/create/connet/3.png" alt="oracle图片"><br>4,单击+号，选择创建，输入服务名，这里输入shujuku<br><img src="/images/oracle/create/connet/4.png" alt="oracle图片"><br>5,单击下一步，出现如图所示界面，用默认为tcp/ip协议就行<br><img src="/images/oracle/create/connet/5.png" alt="oracle图片"><br>6,填写上服务器的ip地址。注意劲量不用使用localhost这样的地址。<br><img src="/images/oracle/create/connet/6.png" alt="oracle图片"><br>7,输入服务器的服务名<br><img src="/images/oracle/create/connet/7.png" alt="oracle图片"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有很多软件是直接连数据库的，oracle的好多直接连数据的方式都是采用net manager的。好处就是只要安装了oracle哪怕只是客户端，都很容易实现连接数据库。用起来方便，安全。挺不错的。&lt;/p&gt;
&lt;h1 id=&quot;采用net-manager配置&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="oracle" scheme="http://yoursite.com/categories/oracle/"/>
    
    
  </entry>
  
  <entry>
    <title>link(图片)</title>
    <link href="http://yoursite.com/2018/05/22/link-%E5%9B%BE%E7%89%87/"/>
    <id>http://yoursite.com/2018/05/22/link-图片/</id>
    <published>2018-05-22T07:09:43.000Z</published>
    <updated>2018-05-22T07:12:54.376Z</updated>
    
    <content type="html"><![CDATA[<p>图片链接地址<br><a href="http://www.bitbug.net/" target="_blank" rel="noopener">在线制作ico图标</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;图片链接地址&lt;br&gt;&lt;a href=&quot;http://www.bitbug.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;在线制作ico图标&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="link" scheme="http://yoursite.com/categories/link/"/>
    
    
  </entry>
  
  <entry>
    <title>oracle数据库创建(配置)</title>
    <link href="http://yoursite.com/2018/05/22/oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%9B%E5%BB%BA-%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/05/22/oracle数据库创建-配置/</id>
    <published>2018-05-22T04:47:11.000Z</published>
    <updated>2018-05-23T02:35:32.119Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通过配置来创建数据库-Database-Configuration-Assistant"><a href="#通过配置来创建数据库-Database-Configuration-Assistant" class="headerlink" title="通过配置来创建数据库 Database Configuration Assistant"></a>通过配置来创建数据库 Database Configuration Assistant</h1><pre><code>oracle使用的步骤</code></pre><p>1,在开始-》所有程序中找到Oracle下级菜单-》配置和移植工具–》Database Configuration Assistant<br><img src="/images/oracle/create/config/1.png" alt="oracle图片"><br>2,首先会进入首页，只需要点击下一步即可，进入到真正配置的第一步。在这步我们选择：创建数据库，点击下一步<br><img src="/images/oracle/create/config/2.png" alt="oracle图片"><br>3,第二步是选择要创建的数据库的模板，Oracle提供的带数据文件的模板，里面包含了预先创建的数据库，这样可以很快速的完成数据库的创建。一般情况下，我们选择：一般用途或事物处理<br><img src="/images/oracle/create/config/3.png" alt="oracle图片"><br>4,这一步需要我们设置数据库名和SID，输入数据库名后自动生成相应的SID,但是我们也可以自己修改<br><img src="/images/oracle/create/config/4.png" alt="oracle图片"><br>5,接下来的一步，直接使用默认配置即可<br><img src="/images/oracle/create/config/5.png" alt="oracle图片"><br>6,进入配置数据库口令的步骤，可以选择为不同账户设置不同的口令，也可以统一所有的口令。如果不设置则会使用默认的口令。此处为了安全考虑，建议大家设置一下口令(Admin123456)。接着点击下一步，接下来的步骤使用默认设置即可<br><img src="/images/oracle/create/config/6.png" alt="oracle图片"><br><img src="/images/oracle/create/config/7.png" alt="oracle图片"><br>7,第7-10步包含了数据库恢复区、内存等的设置，直接使用Oracle的默认值即可。在第11步，勾选创建数据库的同时，也能选择性的将自己建立的数据库存为数据库模板，或者生成数据库创建的脚本。点击完成，等待数据库初始化创建完成，关闭窗口即可。<br><img src="/images/oracle/create/config/8.png" alt="oracle图片"><br>8,最后可以使用我们创建的数据库进行登录了，登录后可以进行建表等操作啦。<br>Oracle创建数据库很多步骤直接使用默认的设置即可满足日常工作学习的需求了，自己另外配置需消耗较多时间</p><h1 id="创建表空间"><a href="#创建表空间" class="headerlink" title="创建表空间"></a>创建表空间</h1><p>需要使用SYS登陆,创建数据库时的口令Admin123456</p><p>  删除表空间<br>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop tablespace WORKFLOW01 including contents;</span><br></pre></td></tr></table></figure></p><pre><code>创建固定表空间 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLESPACE <span class="string">"WORKFLOW01"</span></span><br><span class="line">LOGGING DATAFILE <span class="string">'D:\tablespace\oracle\work\WORKFLOW01.ora'</span> SIZE <span class="number">500</span>m autoextend on</span><br><span class="line">next <span class="number">32</span>m maxsize <span class="number">1024</span>m</span><br><span class="line">extent management local;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure></code></pre><h1 id="创建实例授权"><a href="#创建实例授权" class="headerlink" title="创建实例授权"></a>创建实例授权</h1><p>需要使用SYS登陆,创建数据库时的口令Admin123456</p><p>删除用户<br>     <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop user myroot cascade;</span><br></pre></td></tr></table></figure></p><p>创建用户 Create the myroot<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create user myroot</span><br><span class="line">identified by <span class="string">"123456"</span></span><br><span class="line"><span class="keyword">default</span> tablespace WORKFLOW01</span><br><span class="line">temporary tablespace TEMP</span><br><span class="line">profile DEFAULT;</span><br></pre></td></tr></table></figure></p><p>授权 Grant/Revoke role privileges<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant connect to myroot <span class="keyword">with</span> admin option;</span><br><span class="line">grant dba to myroot <span class="keyword">with</span> admin option;</span><br></pre></td></tr></table></figure></p><p>授权 Grant/Revoke system privileges<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">grant alter any table to myroot <span class="keyword">with</span> admin option;</span><br><span class="line">grant create any table to myroot <span class="keyword">with</span> admin option;</span><br><span class="line">grant <span class="keyword">delete</span> any table to myroot <span class="keyword">with</span> admin option;</span><br><span class="line">grant update any table to myroot <span class="keyword">with</span> admin option;</span><br><span class="line">grant drop any table to myroot <span class="keyword">with</span> admin option;</span><br><span class="line">grant insert any table to myroot <span class="keyword">with</span> admin option;</span><br><span class="line">grant select any table to myroot <span class="keyword">with</span> admin option;</span><br><span class="line">grant unlimited tablespace to myroot <span class="keyword">with</span> admin option;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;通过配置来创建数据库-Database-Configuration-Assistant&quot;&gt;&lt;a href=&quot;#通过配置来创建数据库-Database-Configuration-Assistant&quot; class=&quot;headerlink&quot; title=&quot;通过配置来创
      
    
    </summary>
    
      <category term="oracle" scheme="http://yoursite.com/categories/oracle/"/>
    
    
  </entry>
  
  <entry>
    <title>spring工作原理</title>
    <link href="http://yoursite.com/2018/05/14/spring%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2018/05/14/spring工作原理/</id>
    <published>2018-05-14T05:56:43.000Z</published>
    <updated>2018-05-14T06:47:32.406Z</updated>
    
    <content type="html"><![CDATA[<p>Spring工作原理</p><h1 id="1、spring原理"><a href="#1、spring原理" class="headerlink" title="1、spring原理"></a>1、spring原理</h1><pre><code>     内部最核心的就是IOC了，动态注入，让一个对象的创建不用new了，可以自动的生产，这其实就是利用java里的 反射，反射其实就是在运行时动态的去创建、调用对象，Spring就是在运行时，跟xml Spring的配置文件来动态的创 建对象，和调用对象里的方法的 。     Spring还有一个核心就是AOP这个就是面向切面编程，可以为某一类对象 进行监督和控制（也就是在调用这类对 象的具体方法的前后去调用你指定的模块）从而达到对一个模块扩充的功能。这些都是通过配置类达到的。     Spring目的：就是让对象与对象（模块与模块）之间的关系没有通过代码来关联，都是通过配置类说明管理的（Spring根据这些配置 内部通过反射去动态的组装对象）     要记住：Spring是一个容器，凡是在容器里的对象才会有Spring所提供的这些服务和功能。     Spring里用的最经典的一个设计模式就是：模板方法模式。(这里我都不介绍了，是一个很常用的设计模式)， Spring里的配置是很多的，很难都记住，但是Spring里的精华也无非就是以上的两点，把以上两点跟理解了 也就基 本上掌握了Spring.</code></pre><h2 id="Spring-AOP与IOC"><a href="#Spring-AOP与IOC" class="headerlink" title="Spring AOP与IOC"></a>Spring AOP与IOC</h2><h3 id="一、-IoC-Inversion-of-control-控制反转"><a href="#一、-IoC-Inversion-of-control-控制反转" class="headerlink" title="一、 IoC(Inversion of control): 控制反转"></a>一、 IoC(Inversion of control): 控制反转</h3><h4 id="1、IoC："><a href="#1、IoC：" class="headerlink" title="1、IoC："></a>1、IoC：</h4><pre><code>概念：控制权由对象本身转向容器；由容器根据配置文件去创建实例并创建各个实例之间的依赖关系核心：bean工厂；在Spring中，bean工厂创建的各个实例称作bean</code></pre><h3 id="二、AOP-Aspect-Oriented-Programming-面向方面编程"><a href="#二、AOP-Aspect-Oriented-Programming-面向方面编程" class="headerlink" title="二、AOP(Aspect-Oriented Programming): 面向方面编程"></a>二、AOP(Aspect-Oriented Programming): 面向方面编程</h3><h4 id="1、-代理的两种方式："><a href="#1、-代理的两种方式：" class="headerlink" title="1、 代理的两种方式："></a>1、 代理的两种方式：</h4><pre><code>静态代理：    针对每个具体类分别编写代理类；    针对一个接口编写一个代理类；动态代理：    针对一个方面编写一个InvocationHandler，然后借用JDK反射包中的Proxy类为各种接口动态生成相应的代理类</code></pre><h1 id="2、动态代理"><a href="#2、动态代理" class="headerlink" title="2、动态代理:"></a>2、动态代理:</h1><pre><code>    不用写代理类，虚拟机根据真实对象实现的接口产生一个类，通过类实例化一个动态代理，在实例化动态代理时将真实对象及装备注入到动态代理中，向客户端公开的是动态代理，当客户端调用动态代理方法时，动态代理根据类的反射得到真实对象的Method,调用装备的invoke方法，将动态代理、 Method、方法参数传与装备的invoke方法，invoke方法在唤起method方法前或后做一些处理。     1、产生动态代理的类:        java.lang.refect.Proxy     2、装备必须实现InvocationHandler接口实现invoke方法</code></pre><h1 id="3、反射"><a href="#3、反射" class="headerlink" title="3、反射"></a>3、反射</h1><pre><code>什么是类的返射?    通过类说明可以得到类的父类、实现的接口、内部类、构造函数、方法、属性并可以根据构造器实例化一个对象，    唤起一个方法，取属性值，改属性值。如何得到一个类说明：        Class cls=类.class;        Class cls=对象.getClass();        Class.forName(&quot;类路径&quot;);如何得到一个方法并唤起它?        Class cls=类.class;        Constructor cons=cls.getConstructor(new Class[]{String.class});        Object obj=cons.newInstance(new Object[]{&quot;aaa&quot;});        Method method=cls.getMethod(&quot;方法名&quot;,new Class[]{String.class,Integer.class});        method.invoke(obj,new Object[]{&quot;aa&quot;,new Integer(1)});</code></pre><h1 id="4、spring的三种注入方式是什么"><a href="#4、spring的三种注入方式是什么" class="headerlink" title="4、spring的三种注入方式是什么?"></a>4、spring的三种注入方式是什么?</h1><pre><code>setterinterfaceconstructor</code></pre><h1 id="5、spring的核心接口及核类配置文件是什么"><a href="#5、spring的核心接口及核类配置文件是什么" class="headerlink" title="5、spring的核心接口及核类配置文件是什么?"></a>5、spring的核心接口及核类配置文件是什么?</h1><pre><code>FactoryBean:工厂bean主要实现ioc/diApplicationContext ac=new FileXmlApplicationContext(&quot;applicationContext.xml&quot;);Object obj=ac.getBean(&quot;id值&quot;);</code></pre><h1 id="6、Spring框架的7个模块"><a href="#6、Spring框架的7个模块" class="headerlink" title="6、Spring框架的7个模块"></a>6、Spring框架的7个模块</h1><p> Spring 框架是一个分层架构，由 7 个定义良好的模块组成。Spring 模块构建在核心容器之上，核心容器定义了创建、配置和管理 bean的方式，组成 Spring 框架的每个模块（或组件）都可以单独存在，或者与其他一个或多个模块联合实现。每个模块的功能如下：</p><pre><code>核心容器：核心容器提供 Spring 框架的基本功能。核心容器的主要组件是 BeanFactory，它是工厂模式的实现。BeanFactory 使用控制反转 （IOC）模式将应用程序的配置和依赖性规范与实际的应用程序代码分开。Spring 上下文：Spring 上下文是一个配置文件，向 Spring 框架提供上下文信息。Spring 上下文包括企业服务，例如 JNDI、EJB、电子邮件、国际化、校验和调度功能。Spring AOP：通过配置管理特性，Spring AOP 模块直接将面向方面的编程功能集成到了 Spring 框架中。所以，可以很容易地使 Spring 框架管理的任何对象支持 AOP。Spring AOP 模块为基于 Spring 的应用程序中的对象提供了事务管理服务。通过使用 Spring AOP，不用依赖 EJB 组件，就可以将声明性事务管理集成到应用程序中。Spring DAO：JDBC DAO 抽象层提供了有意义的异常层次结构，可用该结构来管理异常处理和不同数据库供应商抛出的错误消息。异常层次结构简化了错误处理，并且极大地降低了需要编写的异常代码数量（例如打开和关闭连接）。Spring DAO 的面向 JDBC 的异常遵从通用的 DAO 异常层次结构。Spring ORM：Spring 框架插入了若干个 ORM 框架，从而提供了 ORM 的对象关系工具，其中包括 JDO、Hibernate和 iBatis SQL Map。所有这些都遵从 Spring 的通用事务和 DAO 异常层次结构。Spring Web 模块：Web 上下文模块建立在应用程序上下文模块之上，为基于 Web 的应用程序提供了上下文。所以，Spring 框架支持与 Jakarta Struts 的集成。Web 模块还简化了处理多部分请求以及将请求参数绑定到域对象的工作。Spring MVC 框架：MVC 框架是一个全功能的构建 Web 应用程序的 MVC 实现。通过策略接口，MVC 框架变成为高度可配置的，MVC 容纳了大量视图技术，其中包括 JSP、Velocity、Tiles、iText 和 POI。</code></pre><p>Spring 框架的功能可以用在任何 J2EE 服务器中，大多数功能也适用于不受管理的环境。Spring 的核心<br>要点是：支持不绑定到特定 J2EE 服务的可重用业务和数据访问对象。毫无疑问，这样的对象可以在不同<br>J2EE 环境 （Web 或 EJB）、独立应用程序、测试环境之间重用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Spring工作原理&lt;/p&gt;
&lt;h1 id=&quot;1、spring原理&quot;&gt;&lt;a href=&quot;#1、spring原理&quot; class=&quot;headerlink&quot; title=&quot;1、spring原理&quot;&gt;&lt;/a&gt;1、spring原理&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;     内部最核心的就
      
    
    </summary>
    
      <category term="spring" scheme="http://yoursite.com/categories/spring/"/>
    
    
  </entry>
  
  <entry>
    <title>redis集群搭建</title>
    <link href="http://yoursite.com/2018/05/10/redis%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2018/05/10/redis集群搭建/</id>
    <published>2018-05-10T03:20:08.000Z</published>
    <updated>2018-05-14T07:07:06.763Z</updated>
    
    <content type="html"><![CDATA[<p>介于有人需要，总结一下，不保证对</p><h2 id="1、下载redis-3-0-0-tar-gz-必须3-0-0及之后版本，之前版本不支持集群模式"><a href="#1、下载redis-3-0-0-tar-gz-必须3-0-0及之后版本，之前版本不支持集群模式" class="headerlink" title="1、下载redis-3.0.0.tar.gz (必须3.0.0及之后版本，之前版本不支持集群模式)"></a>1、下载redis-3.0.0.tar.gz (必须3.0.0及之后版本，之前版本不支持集群模式)</h2><p> 下载：wget <a href="http://download.redis.io/releases/redis-3.0.0.tar.gz" target="_blank" rel="noopener">http://download.redis.io/releases/redis-3.0.0.tar.gz</a><br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis<span class="number">-3.0</span><span class="number">.0</span>.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure></p><p> 重命名(如果嫌名字太长，可重命名，我这里就改一下)<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/local/redis<span class="number">-3.0</span><span class="number">.0</span> /usr/local/redis3<span class="number">.0</span></span><br><span class="line">cd /usr/local/redis3<span class="number">.0</span></span><br></pre></td></tr></table></figure></p><p> 编译<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure></p><p> 未make install时，/usr/local/redis3.0/src/目录下没有redis-cli、redis-server 等启动脚本<br>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/redis3<span class="number">.0</span>/src/</span><br></pre></td></tr></table></figure></p><h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><p> 是否安装成功，可观察/usr/local/redis3.0/src/目录下redis-cli、redis-server 等脚本</p><h2 id="3、为了方便操作，同时不影响源文件，这里进行以下操作"><a href="#3、为了方便操作，同时不影响源文件，这里进行以下操作" class="headerlink" title="3、为了方便操作，同时不影响源文件，这里进行以下操作"></a>3、为了方便操作，同时不影响源文件，这里进行以下操作</h2>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/redis/bin</span><br><span class="line">mv mkreleasehdr.sh redis-benchmark redis-check-aof redis-check-dump redis-cli redis-server /usr/local/redis/bin</span><br></pre></td></tr></table></figure><h2 id="4、创建redis-cluster文件夹，并在下面创建6个文件夹（一般集群最少6个，3主3从）"><a href="#4、创建redis-cluster文件夹，并在下面创建6个文件夹（一般集群最少6个，3主3从）" class="headerlink" title="4、创建redis-cluster文件夹，并在下面创建6个文件夹（一般集群最少6个，3主3从）"></a>4、创建redis-cluster文件夹，并在下面创建6个文件夹（一般集群最少6个，3主3从）</h2>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/redis-cluster</span><br><span class="line">cd /usr/local/redis-cluster</span><br><span class="line">mkdir <span class="number">7001</span> <span class="number">7002</span> <span class="number">7003</span> <span class="number">7004</span> <span class="number">7005</span> <span class="number">7006</span></span><br></pre></td></tr></table></figure><h2 id="5、将-usr-local-redis3-0-redis-conf配置文件分别copy到700-文件下，分别进行修改"><a href="#5、将-usr-local-redis3-0-redis-conf配置文件分别copy到700-文件下，分别进行修改" class="headerlink" title="5、将/usr/local/redis3.0/redis.conf配置文件分别copy到700*文件下，分别进行修改"></a>5、将/usr/local/redis3.0/redis.conf配置文件分别copy到700*文件下，分别进行修改</h2>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/local/redis3<span class="number">.0</span>/redis.conf /usr/local/redis-cluster/<span class="number">7001</span></span><br><span class="line">vi /usr/local/redis-cluster/<span class="number">7001</span>/redis.conf</span><br></pre></td></tr></table></figure><p> 修改如下：<br>    <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">daemonize yes # 后台启动</span><br><span class="line">port 7001 # 端口</span><br><span class="line">bind 192.168.0.228 # 服务器IP</span><br><span class="line">dir /usr/local/redis-cluster/7001/ # 数据存放位置，每个节点路径不一样</span><br><span class="line">cluster-enabled yes # 启动集群模式</span><br><span class="line">cluster-config-file nodes-7001.conf # 名称最好与端口一致</span><br><span class="line">cluster-node-timeout 5000 # 5000毫秒</span><br><span class="line">appendonly yes #</span><br></pre></td></tr></table></figure></p><p> 简单操作<br>     <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'s/7001/7002/g'</span> /usr/local/redis-cluster/<span class="number">7001</span>/redis.conf &gt; <span class="regexp">/usr/</span>local/redis-cluster/<span class="number">7002</span>/redis.conf</span><br><span class="line">sed <span class="string">'s/7001/7003/g'</span> /usr/local/redis-cluster/<span class="number">7001</span>/redis.conf &gt; <span class="regexp">/usr/</span>local/redis-cluster/<span class="number">7003</span>/redis.conf</span><br><span class="line">sed <span class="string">'s/7001/7004/g'</span> /usr/local/redis-cluster/<span class="number">7001</span>/redis.conf &gt; <span class="regexp">/usr/</span>local/redis-cluster/<span class="number">7004</span>/redis.conf</span><br><span class="line">sed <span class="string">'s/7001/7005/g'</span> /usr/local/redis-cluster/<span class="number">7001</span>/redis.conf &gt; <span class="regexp">/usr/</span>local/redis-cluster/<span class="number">7005</span>/redis.conf</span><br><span class="line">sed <span class="string">'s/7001/7006/g'</span> /usr/local/redis-cluster/<span class="number">7001</span>/redis.conf &gt; <span class="regexp">/usr/</span>local/redis-cluster/<span class="number">7006</span>/redis.conf</span><br></pre></td></tr></table></figure></p><h2 id="6、由于redis使用到ruby命令，先需安装ruby"><a href="#6、由于redis使用到ruby命令，先需安装ruby" class="headerlink" title="6、由于redis使用到ruby命令，先需安装ruby"></a>6、由于redis使用到ruby命令，先需安装ruby</h2><pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install ruby # 存在依赖，按y</span><br><span class="line">yum install rubygems # 存在依赖，按y</span><br><span class="line">gem install redis # 安装redis和ruby接口</span><br></pre></td></tr></table></figure></code></pre><p>安装失败 就进行下面操作:<br>     <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">curl -L get.rvm.io | bash -s stable</span><br><span class="line">gpg --keyserver hkp:<span class="comment">//keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3</span></span><br><span class="line">curl -sSL https:<span class="comment">//get.rvm.io | bash -s stable</span></span><br><span class="line">source /usr/local/rvm/scripts/rvm</span><br><span class="line">rvm list known</span><br><span class="line">rvm install <span class="number">2.3</span><span class="number">.0</span></span><br><span class="line">rvm use <span class="number">2.3</span><span class="number">.0</span></span><br><span class="line">rvm remove <span class="number">1.8</span><span class="number">.7</span></span><br><span class="line">ruby --version</span><br><span class="line">gem install redis</span><br><span class="line">yum install -y rubygems</span><br></pre></td></tr></table></figure></p><h2 id="7、启动6个redis"><a href="#7、启动6个redis" class="headerlink" title="7、启动6个redis"></a>7、启动6个redis</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/redis/bin/redis-server /usr/local/redis-cluster/<span class="number">7001</span>/redis.conf</span><br><span class="line">/usr/local/redis/bin/redis-server /usr/local/redis-cluster/<span class="number">7002</span>/redis.conf</span><br><span class="line">/usr/local/redis/bin/redis-server /usr/local/redis-cluster/<span class="number">7003</span>/redis.conf</span><br><span class="line">/usr/local/redis/bin/redis-server /usr/local/redis-cluster/<span class="number">7004</span>/redis.conf</span><br><span class="line">/usr/local/redis/bin/redis-server /usr/local/redis-cluster/<span class="number">7005</span>/redis.conf</span><br><span class="line">/usr/local/redis/bin/redis-server /usr/local/redis-cluster/<span class="number">7006</span>/redis.conf</span><br></pre></td></tr></table></figure></code></pre><p> 查看是否启动完成<br>      <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep redis</span><br></pre></td></tr></table></figure></p><p> 或<br>       <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tunpl | grep redis</span><br></pre></td></tr></table></figure></p><h2 id="8、创建集群"><a href="#8、创建集群" class="headerlink" title="8、创建集群"></a>8、创建集群</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/redis3<span class="number">.0</span>/src/redis-trib.rb create --replicas <span class="number">1</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.228</span>:<span class="number">7001</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.228</span>:<span class="number">7002</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.228</span>:<span class="number">7003</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.228</span>:<span class="number">7004</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.228</span>:<span class="number">7005</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.228</span>:<span class="number">7006</span></span><br></pre></td></tr></table></figure></code></pre><p>  create表示创建<br>  1=主/从(比值)<br>  按顺序<br>  主节点：192.168.0.228:7001 192.168.0.228:7002 192.168.0.228:7003<br>  从节点：192.168.0.228:7004 192.168.0.228:7005 192.168.0.228:7006<br>  192.168.0.228:7004 是 192.168.0.228:7001 的从节点<br>  创建过程会询问，yes即可</p><h2 id="9、进入集群环境"><a href="#9、进入集群环境" class="headerlink" title="9、进入集群环境"></a>9、进入集群环境</h2><p>  进入redis客户端，-c 表示集群模式，-h 表示服务器地址， -p 表示端口<br>       <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/redis/bin/redis-cli -c -h <span class="number">192.168</span><span class="number">.0</span><span class="number">.228</span> -p <span class="number">7001</span></span><br></pre></td></tr></table></figure></p><p>  如果拒绝连接<br>第一步启动<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis-server /usr/local/redis-cluster/<span class="number">7001</span>/redis.conf</span><br><span class="line">redis-server /usr/local/redis-cluster/<span class="number">7002</span>/redis.conf</span><br><span class="line">redis-server /usr/local/redis-cluster/<span class="number">7003</span>/redis.conf</span><br><span class="line">redis-server /usr/local/redis-cluster/<span class="number">7004</span>/redis.conf</span><br><span class="line">redis-server /usr/local/redis-cluster/<span class="number">7005</span>/redis.conf</span><br><span class="line">redis-server /usr/local/redis-cluster/<span class="number">7006</span>/redis.conf</span><br><span class="line">redis-cli</span><br></pre></td></tr></table></figure></p><p>然后进入集群环境<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/redis/bin/redis-cli -c -h <span class="number">192.168</span><span class="number">.0</span><span class="number">.228</span> -p <span class="number">7001</span></span><br></pre></td></tr></table></figure></p><p>  退出redis客户端<br>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168</span><span class="number">.0</span><span class="number">.228</span>:<span class="number">7001</span>&gt; quit</span><br></pre></td></tr></table></figure></p><p>  关闭redis服务<br>     <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/redis/bin/redis-cli shutdown</span><br></pre></td></tr></table></figure></p><p>  注：电脑性能不好，实际环境中自行改成不同机器IP即可收起</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;介于有人需要，总结一下，不保证对&lt;/p&gt;
&lt;h2 id=&quot;1、下载redis-3-0-0-tar-gz-必须3-0-0及之后版本，之前版本不支持集群模式&quot;&gt;&lt;a href=&quot;#1、下载redis-3-0-0-tar-gz-必须3-0-0及之后版本，之前版本不支持集群模式&quot; 
      
    
    </summary>
    
      <category term="redis" scheme="http://yoursite.com/categories/redis/"/>
    
    
  </entry>
  
  <entry>
    <title>BlueLake博客主题的详细配置</title>
    <link href="http://yoursite.com/2018/05/08/BlueLake%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/05/08/BlueLake博客主题的详细配置/</id>
    <published>2018-05-08T08:21:50.000Z</published>
    <updated>2018-05-08T09:05:38.242Z</updated>
    
    <content type="html"><![CDATA[<h3 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a><a href="#开始之前" title="开始之前"></a>开始之前</h3><p><a href="https://github.com/chaooo/hexo-theme-BlueLake" target="_blank" rel="noopener">BlueLake主题</a>写了有一段时间了，经常会有朋友发消息给我问一些配置的问题，这篇博文主要也是为了解决这些问题。主题以简洁轻量自居(实则简陋)，去掉了Jquery和Fancybox,用原生JS实现站内搜索功能和回到顶部效果。这个主题只是一个小小的雏形，期待您来帮助它成长。</p><p>在阅读本文之前，假定您已经成功安装了<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>，并使用 Hexo 提供的命令创建了一个静态博客。Hexo是一个快速、简洁且高效的博客框架。Hexo基于Node.js ，使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><blockquote><p>需要特别注意的是Hexo有两个<code>_config.yml</code>配置文件，一份位于站点根目录下，主要包含 Hexo 站点本身的配置，下文中会称为<strong><code>根_config.yml</code></strong>；另一份位于主题目录下（themes/主题名/_config.yml），这份配置由主题作者提供，主要用于配置主题相关的选项,下文中会称为<strong><code>主题_config.yml</code></strong>。</p></blockquote><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a><a href="#1-安装" title="1. 安装"></a>1. 安装</h3><p>您可以直接到<a href="https://github.com/chaooo/hexo-theme-BlueLake" target="_blank" rel="noopener">BlueLake发布页</a>下载，然后解压拷贝到<code>themes</code>目录下，修改配置即可。<br>不过我还是推荐使用<code>GIT</code>来checkout代码，之后也可以通过<code>git pull</code>来快速更新。</p><h4 id="1-1-安装主题"><a href="#1-1-安装主题" class="headerlink" title="1.1 安装主题"></a><a href="#1-1-安装主题" title="1.1 安装主题"></a>1.1 安装主题</h4><p>在根目录下打开终端窗口：</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> <a href="https://github.com/chaooo/hexo-theme-BlueLake.git" target="_blank" rel="noopener">https://github.com/chaooo/hexo-theme-BlueLake.git</a> themes/BlueLake</div></pre></td></tr></tbody></table></figure><h4 id="1-2-安装主题渲染器"><a href="#1-2-安装主题渲染器" class="headerlink" title="1.2 安装主题渲染器"></a><a href="#1-2-安装主题渲染器" title="1.2 安装主题渲染器"></a>1.2 安装主题渲染器</h4><p>BlueLake是基于<code>jade</code>和<code>stylus</code>写的，所以需要安装<code>hexo-renderer-jade</code>和<code>hexo-renderer-stylus</code>来渲染。</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install <a href="mailto:hexo-renderer-jade@0.3.0" target="_blank" rel="noopener">hexo-renderer-jade@0.3.0</a> –save</div><div class="line">$ npm install hexo-renderer-stylus –save</div></pre></td></tr></tbody></table></figure><h4 id="1-3-启用主题"><a href="#1-3-启用主题" class="headerlink" title="1.3 启用主题"></a><a href="#1-3-启用主题" title="1.3 启用主题"></a>1.3 启用主题</h4><p>打开<code>根_config.yml</code>配置文件，找到theme字段，将其值改为<code>BlueLake</code>(先确认主题文件夹名称是否为BlueLake)。</p><figure class="highlight yml"><figcaption><span>根_config.yml</span><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">theme:</span> BlueLake</div></pre></td></tr></tbody></table></figure><h4 id="1-4-验证"><a href="#1-4-验证" class="headerlink" title="1.4 验证"></a><a href="#1-4-验证" title="1.4 验证"></a>1.4 验证</h4><p>首先启动 Hexo 本地站点，并开启调试模式：</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s –debug</div></pre></td></tr></tbody></table></figure><p>在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：<code>INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code><br>此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p><h4 id="1-5-更新主题"><a href="#1-5-更新主题" class="headerlink" title="1.5 更新主题"></a><a href="#1-5-更新主题" title="1.5 更新主题"></a>1.5 更新主题</h4><p>今后若主题添加了新功能正是您需要的，您可以直接<code>git pull</code>来更新主题。</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> themes/BlueLake</div><div class="line">git pull</div></pre></td></tr></tbody></table></figure><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a><a href="#2-配置" title="2. 配置"></a>2. 配置</h3><h4 id="2-1-配置网站头部显示文字"><a href="#2-1-配置网站头部显示文字" class="headerlink" title="2.1 配置网站头部显示文字"></a><a href="#2-1-配置网站头部显示文字" title="2.1 配置网站头部显示文字"></a>2.1 配置网站头部显示文字</h4><p>打开<code>根_config.yml</code>，找到：</p><figure class="highlight yml"><figcaption><span>根_config.yml</span><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">title:</span> </div><div class="line"><span class="attr">subtitle:</span> </div><div class="line"><span class="attr">description:</span> </div><div class="line"><span class="attr">author:</span></div></pre></td></tr></tbody></table></figure><p><code>title</code>和<code>subtitle</code>分别是网站主标题和副标题，会显示在网站头部；<code>description</code>在网站界面不会显示，内容会加入网站源码的<code>meta</code>标签中，主要用于SEO；<code>author</code>就填写网站所有者的名字，会在网站底部的<code>Copyright</code>处有所显示。</p><h4 id="2-2-设置语言"><a href="#2-2-设置语言" class="headerlink" title="2.2 设置语言"></a><a href="#2-2-设置语言" title="2.2 设置语言"></a>2.2 设置语言</h4><p>该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）；例如选用简体中文，在<code>根_config.yml</code>配置如下：</p><figure class="highlight yml"><figcaption><span>根_config.yml</span><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">language:</span> zh-CN</div></pre></td></tr></tbody></table></figure><h4 id="2-3-设置菜单"><a href="#2-3-设置菜单" class="headerlink" title="2.3 设置菜单"></a><a href="#2-3-设置菜单" title="2.3 设置菜单"></a>2.3 设置菜单</h4><p>打开<code>主题_config.yml</code>，找到：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  - page:</span> home</div><div class="line"><span class="attr">    directory:</span> .</div><div class="line"><span class="attr">    icon:</span> fa-home</div><div class="line"><span class="attr">  - page:</span> archive</div><div class="line"><span class="attr">    directory:</span> archives/</div><div class="line"><span class="attr">    icon:</span> fa-archive</div><div class="line">  <span class="comment"># - page: about</span></div><div class="line">  <span class="comment">#   directory: about/</span></div><div class="line">  <span class="comment">#   icon: fa-user</span></div><div class="line"><span class="attr">  - page:</span> rss</div><div class="line"><span class="attr">    directory:</span> atom.xml</div><div class="line"><span class="attr">    icon:</span> fa-rss</div></pre></td></tr></tbody></table></figure><p>主题默认是展示四个菜单，即<code>主页home</code>，<code>归档archive</code>，<code>关于about</code>，<code>订阅RSS</code>；about需要手动添加，RSS需要安装插件，若您并不需要，可以直接注释掉。<br>每个页面底部的<code>footer</code>中<code>联系博主</code>的三个图标分别是<code>邮箱</code>，<code>微博主页链接地址</code>，<code>GitHUb个人页链接地址</code>，直接使用<code>主题_config.yml</code>中<code>about页面</code>的配置，若不需要about页面，只需要如下配置就好：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># About page </span></div><div class="line"><span class="attr">about:</span></div><div class="line"><span class="attr">  email:</span> <span class="comment">## 个人邮箱 </span></div><div class="line"><span class="attr">  weibo_url:</span> <span class="comment">## 微博主页链接地址</span></div><div class="line"><span class="attr">  github_url:</span> <span class="comment">## github主页链接地址</span></div></pre></td></tr></tbody></table></figure><h5 id="2-3-1-添加about页"><a href="#2-3-1-添加about页" class="headerlink" title="2.3.1 添加about页"></a><a href="#2-3-1-添加about页" title="2.3.1 添加about页"></a>2.3.1 添加about页</h5><p>此主题默认page页面是关于我页面的布局，在根目录下打开命令行窗口，生成一个关于我页面：</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page <span class="string">‘about’</span></div></pre></td></tr></tbody></table></figure><p>打开<code>主题_config.yml</code>，补全关于我页面的详细信息：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># About page </span></div><div class="line"><span class="attr">about:</span></div><div class="line"><span class="attr">  photo_url:</span> <span class="comment">## 头像的链接地址</span></div><div class="line"><span class="attr">  email:</span> <span class="comment">## 个人邮箱 </span></div><div class="line"><span class="attr">  weibo_url:</span> <span class="comment">## 微博主页链接地址</span></div><div class="line"><span class="attr">  weibo_name:</span> <span class="comment">## 微博用户名 </span></div><div class="line"><span class="attr">  github_url:</span> <span class="comment">## github主页链接地址</span></div><div class="line"><span class="attr">  github_name:</span> <span class="comment">## github用户名</span></div></pre></td></tr></tbody></table></figure><p>当然您也可以自定义重新布局about页面，只需要修改<code>layout/page.jade</code>模板就好。</p><h5 id="2-3-2-安装-RSS-订阅-和-sitemap-网站地图-插件"><a href="#2-3-2-安装-RSS-订阅-和-sitemap-网站地图-插件" class="headerlink" title="2.3.2 安装 RSS(订阅) 和 sitemap(网站地图) 插件"></a><a href="#2-3-2-安装-RSS-订阅-和-sitemap-网站地图-插件" title="2.3.2 安装 RSS(订阅) 和 sitemap(网站地图) 插件"></a>2.3.2 安装 RSS(订阅) 和 sitemap(网站地图) 插件</h5><p>在根目录下打开命令行窗口：</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-feed –save</div><div class="line">$ npm install hexo-generator-sitemap –save</div><div class="line">$ npm install hexo-generator-baidu-sitemap –save</div></pre></td></tr></tbody></table></figure><p>添加<code>主题_config.yml</code>配置：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Plugins:</span></div><div class="line">  hexo-generator-feed</div><div class="line">  hexo-generator-sitemap</div><div class="line">  hexo-generator-baidu-sitemap</div><div class="line"></div><div class="line"><span class="attr">feed:</span></div><div class="line"><span class="attr">  type:</span> atom</div><div class="line"><span class="attr">  path:</span> atom.xml</div><div class="line"><span class="attr">  limit:</span> <span class="number">20</span></div><div class="line"></div><div class="line"><span class="attr">sitemap:</span></div><div class="line"><span class="attr">  path:</span> sitemap.xml</div><div class="line"><span class="attr">baidusitemap:</span></div><div class="line"><span class="attr">  path:</span> baidusitemap.xml</div></pre></td></tr></tbody></table></figure><h4 id="2-4-添加本地搜索"><a href="#2-4-添加本地搜索" class="headerlink" title="2.4 添加本地搜索"></a><a href="#2-4-添加本地搜索" title="2.4 添加本地搜索"></a>2.4 添加本地搜索</h4><p>默认本地搜索是用原生JS写的，但还需要HEXO插件创建的JSON数据文件配合。安装插件<a href="https://github.com/alexbruno/hexo-generator-json-content" target="_blank" rel="noopener">hexo-generator-json-content</a>来创建JSON数据文件：</p><figure class="highlight bash"><figcaption><span>git bash</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install <a href="mailto:hexo-generator-json-content@2.2.0" target="_blank" rel="noopener">hexo-generator-json-content@2.2.0</a> –save</div></pre></td></tr></tbody></table></figure><p>然后在<code>根_config.yml</code>添加配置：</p><figure class="highlight yml"><figcaption><span>根_config.yml</span><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="attr">jsonContent:</span></div><div class="line"><span class="attr">  meta:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  pages:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  posts:</span></div><div class="line"><span class="attr">    title:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    date:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    path:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    raw:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    content:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    slug:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    updated:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    comments:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    link:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    permalink:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    excerpt:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    categories:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    tags:</span> <span class="literal">true</span></div></pre></td></tr></tbody></table></figure><p>最后在<code>主题_config.yml</code>添加配置：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">local_search:</span> <span class="literal">true</span></div></pre></td></tr></tbody></table></figure><h4 id="2-5-修改站点图标"><a href="#2-5-修改站点图标" class="headerlink" title="2.5 修改站点图标"></a><a href="#2-5-修改站点图标" title="2.5 修改站点图标"></a>2.5 修改站点图标</h4><p>站点图标存放在主题的<code>Source</code>目录下，已经默认为您准备了两张图片。您也可以自己设计站点LOGO。<br>您需要准备一张ico格式并命名为<strong> favicon.ico </strong>，请将其放入hexo目录的<code>source</code>文件夹，建议大小：32px X 32px。<br>您需要为苹果设备添加网站徽标，请命名为<strong> apple-touch-icon.png </strong>的图像放入hexo目录的“source”文件夹中，建议大小为：114px X 114px。<br>(有很多网站都可以在线生成ico格式的图片。)</p><h4 id="2-6-添加站点关键字"><a href="#2-6-添加站点关键字" class="headerlink" title="2.6 添加站点关键字"></a><a href="#2-6-添加站点关键字" title="2.6 添加站点关键字"></a>2.6 添加站点关键字</h4><p>请在hexo目录的<code>根_config.yml</code>中添加keywords字段，如：</p><figure class="highlight yml"><figcaption><span>根_config.yml</span><a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Site</span></div><div class="line"><span class="attr">title:</span> Hexo</div><div class="line"><span class="attr">subtitle:</span> 副标题</div><div class="line"><span class="attr">description:</span> 网站简要描述,如：Charles·Zheng<span class="string">‘s blog.</span></div><div class="line">keywords: 网站关键字, key, key1, key2, key3</div><div class="line">author: Charles</div><div class="line">language: zh-CN</div></pre></td></tr></tbody></table></figure><h4 id="2-7-其他配置"><a href="#2-7-其他配置" class="headerlink" title="2.7 其他配置"></a><a href="#2-7-其他配置" title="2.7 其他配置"></a>2.7 其他配置</h4><p><code>主题_config.yml</code>的其他配置</p><ol><li><code>show_category_count</code>——是否显示分类下的文章数。</li><li><code>widgets_on_small_screens</code>——是否在小屏显示侧边栏，若<code>true</code>,则侧边栏挂件将显示在底部。<figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml </a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">show_category_count:</span> <span class="literal">true</span> </div><div class="line"><span class="attr">widgets_on_small_screens:</span> <span class="literal">true</span></div></pre></td></tr></tbody></table></figure></li></ol><h3 id="3-集成第三方服务"><a href="#3-集成第三方服务" class="headerlink" title="3.集成第三方服务"></a><a href="#3-集成第三方服务" title="3.集成第三方服务"></a>3.集成第三方服务</h3><h4 id="3-1-添加评论"><a href="#3-1-添加评论" class="headerlink" title="3.1 添加评论"></a><a href="#3-1-添加评论" title="3.1 添加评论"></a>3.1 添加评论</h4><p>目前主题集成六种第三方评论，分别是<a href="http://duoshuo.com" target="_blank" rel="noopener">多说评论</a>、<a href="https://disqus.com" target="_blank" rel="noopener">Disqus评论</a>、<a href="https://livere.com" target="_blank" rel="noopener">来必力评论</a>、<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言评论</a>、<a href="https://gentie.163.com/info.html" target="_blank" rel="noopener">网易云跟帖评论</a>、<a href="http://changyan.kuaizhan.com" target="_blank" rel="noopener">畅言评论</a>，多说马上就要停止服务了，友言好像也没怎么维护,目前我已把自己的博客评论从多说转移到畅言了，在国内目前<code>网易云跟帖</code>和<code>畅言</code>还不错。</p><ol><li><p>注册并获得代码。</p><pre><code>*   若使用[多说评论](http://duoshuo.com)，注册多说后获得short_name。</code></pre><ul><li>若使用<a href="https://disqus.com" target="_blank" rel="noopener">Disqus评论</a>，注册Disqus后获得short_name。</li><li>若使用<a href="https://livere.com" target="_blank" rel="noopener">来必力评论</a>，注册来必力,获得data-uid。</li><li>若使用<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言评论</a>，注册友言,获得uid。</li><li>若使用<a href="https://gentie.163.com/info.html" target="_blank" rel="noopener">网易云跟帖评论</a>，注册网易云跟帖,获得productKey。</li><li>若使用<a href="http://changyan.kuaizhan.com" target="_blank" rel="noopener">畅言评论</a>，注册畅言，获得appid，appkey。</li></ul></li><li><p>配置<code>主题_config.yml</code>：<figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Cmments</span></div><div class="line"><span class="attr">comment:</span></div><div class="line"><span class="attr">  duoshuo:</span> <span class="comment">## duoshuo_shortname</span></div><div class="line"><span class="attr">  disqus:</span> <span class="comment">## disqus_shortname</span></div><div class="line"><span class="attr">  livere:</span> <span class="comment">## 来必力(data-uid)</span></div><div class="line"><span class="attr">  uyan:</span> <span class="comment">## 友言(uid)</span></div><div class="line"><span class="attr">  cloudTie:</span> <span class="comment">## 网易云跟帖(productKey)</span></div><div class="line"><span class="attr">  changyan:</span> <span class="comment">## 畅言需在下方配置两个参数，此处不填。</span></div><div class="line"><span class="attr">    appid:</span> <span class="comment">## 畅言(appid)</span></div><div class="line"><span class="attr">    appkey:</span> <span class="comment">##畅言(appkey)</span></div></pre></td></tr></tbody></table></figure></p></li></ol><h4 id="3-2-百度统计"><a href="#3-2-百度统计" class="headerlink" title="3.2 百度统计"></a><a href="#3-2-百度统计" title="3.2 百度统计"></a>3.2 百度统计</h4><ol><li>登录<a href="http://tongji.baidu.com/" target="_blank" rel="noopener">百度统计</a>，定位到站点的代码获取页面。</li><li>复制<code>//hm.baidu.com/hm.js?</code>后面那串统计脚本id(假设为：8006843039519956000)</li><li>配置<code>主题_config.yml</code>:<figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml </a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">baidu_analytics:</span> <span class="number">8006843039519956000</span></div></pre></td></tr></tbody></table></figure><blockquote><p>注意： <code>baidu_analytics</code>不是你的百度<code>id</code>或者百度统计<code>id</code><br>如若使用谷歌统计，配置方法与百度统计类似。</p></blockquote></li></ol><h4 id="3-3-卜算子阅读次数统计"><a href="#3-3-卜算子阅读次数统计" class="headerlink" title="3.3 卜算子阅读次数统计"></a><a href="#3-3-卜算子阅读次数统计" title="3.3 卜算子阅读次数统计"></a>3.3 卜算子阅读次数统计</h4><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">busuanzi:</span> <span class="literal">true</span></div></pre></td></tr></tbody></table></figure><p>若设置为<code>true</code>将计算文章的阅读量(Hits)，并显示在文章标题下的<code>小手图标</code>旁。</p><h4 id="3-4-微博秀"><a href="#3-4-微博秀" class="headerlink" title="3.4 微博秀"></a><a href="#3-4-微博秀" title="3.4 微博秀"></a>3.4 微博秀</h4><p>微博秀挂件的代码放在<code>layout/_widget/weibo.jade</code>下，需要您去<a href="http://open.weibo.com/" target="_blank" rel="noopener">微博开放平台</a>获取您自己的微博秀代码来替换。</p><ol><li>登录<a href="http://open.weibo.com/" target="_blank" rel="noopener">微博开放平台</a>，选择微博秀。</li><li><p>为了与主题风格统一，作如下配置</p><pre><code>*   基础设置：高`400px`；勾选宽度自适应；颜色选择`白色`；</code></pre><ul><li>样式设置：主字色<code>#333</code>；链接色<code>#40759b</code>；鼠标悬停色<code>#f7f8f8</code>；</li><li>模块设置：去掉<code>标题</code>、<code>边框</code>、<code>粉丝</code>的勾选框，只留<code>微博</code>。</li></ul></li><li><p>复制代码里<code>src=&quot;&quot;</code>里引号包裹的内容，替换到<code>layout/_widget/weibo.jade</code><figure class="highlight stylus"><figcaption><span>weibo.jade</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/layout/_widget/weibo.jade" target="_blank" rel="noopener">layout/_widget/weibo.jade</a></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line marked"><span class="selector-class">.widget</span></div><div class="line">  <span class="selector-class">.widget-title</span></div><div class="line">    i(class=<span class="string">‘fa fa-weibo’</span>)= <span class="string">‘ ‘</span> + __(<span class="string">‘新浪微博’</span>)</div><div class="line">  iframe(<span class="attribute">width</span>=<span class="string">“100%”</span>,height=<span class="string">“400”</span>,class=<span class="string">“share_self”</span>,frameborder=<span class="string">“0”</span>,scrolling=<span class="string">“no”</span>,src=<span class="string">“<a href="http://widget.weibo.com/weiboshow/index.php?language=&amp;width=0&amp;height=400&amp;fansRow=2&amp;ptype=1&amp;speed=0&amp;skin=5&amp;isTitle=0&amp;noborder=0&amp;isWeibo=1&amp;isFans=0&amp;uid=1700139362&amp;verifier=85be6061&amp;colors=d6f3f7,ffffff,333,40759b,f7f8f8&amp;dpc=1&quot;" target="_blank" rel="noopener">http://widget.weibo.com/weiboshow/index.php?language=&amp;width=0&amp;height=400&amp;fansRow=2&amp;ptype=1&amp;speed=0&amp;skin=5&amp;isTitle=0&amp;noborder=0&amp;isWeibo=1&amp;isFans=0&amp;uid=1700139362&amp;verifier=85be6061&amp;colors=d6f3f7,ffffff,333,40759b,f7f8f8&amp;dpc=1&quot;</a></span>)</div></pre></td></tr></tbody></table></figure><br>这只是为了和主题的风格统一，当然您也可以自由随意发挥。&gt; 注意：最主要是是要把<code>src</code>里<code>uid=</code>和<code>verifier=</code>后面的字段替换为您自己代码里的就好。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;开始之前&quot;&gt;&lt;a href=&quot;#开始之前&quot; class=&quot;headerlink&quot; title=&quot;开始之前&quot;&gt;&lt;/a&gt;&lt;a href=&quot;#开始之前&quot; title=&quot;开始之前&quot;&gt;&lt;/a&gt;开始之前&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ngrok的基本使用</title>
    <link href="http://yoursite.com/2018/05/03/ngrok%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/05/03/ngrok的基本使用/</id>
    <published>2018-05-03T06:15:33.000Z</published>
    <updated>2018-05-08T02:51:02.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ngrok使用的步骤"><a href="#ngrok使用的步骤" class="headerlink" title="ngrok使用的步骤"></a>ngrok使用的步骤</h2><h2 id="1-把项目放到tomcat启动（即点击startup-bat）tomcat"><a href="#1-把项目放到tomcat启动（即点击startup-bat）tomcat" class="headerlink" title="1.把项目放到tomcat启动（即点击startup.bat）tomcat"></a>1.把项目放到tomcat启动（即点击startup.bat）tomcat</h2><p>将项目放到tomcat下</p><p><img src="/images/ngrok/1.png" alt="ngrok图片"></p><p>启动tomcat</p><p><img src="/images/ngrok/2.png" alt="ngrok图片"></p><h2 id="2-打开https-www-ngrok-cc"><a href="#2-打开https-www-ngrok-cc" class="headerlink" title="2.打开https://www.ngrok.cc/"></a>2.打开<a href="https://www.ngrok.cc/" target="_blank" rel="noopener">https://www.ngrok.cc/</a></h2><p>打开<a href="https://www.ngrok.cc/，登录系统，设置相关信息。" target="_blank" rel="noopener">https://www.ngrok.cc/，登录系统，设置相关信息。</a></p><p><img src="/images/ngrok/3.png" alt="ngrok图片"></p><h2 id="3-通过cmd进入客户端根目录（即sunny-exe所在目录），启动sunny-exe"><a href="#3-通过cmd进入客户端根目录（即sunny-exe所在目录），启动sunny-exe" class="headerlink" title="3.通过cmd进入客户端根目录（即sunny.exe所在目录），启动sunny.exe"></a>3.通过cmd进入客户端根目录（即sunny.exe所在目录），启动sunny.exe</h2><p>找到Sunny.exe所在的根目录</p><p><img src="/images/ngrok/4.png" alt="ngrok图片"></p><p>通过cmd进行启动，sunny.exe clientid id（<a href="https://www.ngrok.cc/" target="_blank" rel="noopener">https://www.ngrok.cc/</a> 网站上面的id）</p><p><img src="/images/ngrok/5.png" alt="ngrok图片"></p><h2 id="4-外网访问（即：第三步，窗口看到的ip就是外网ip）"><a href="#4-外网访问（即：第三步，窗口看到的ip就是外网ip）" class="headerlink" title="4.外网访问（即：第三步，窗口看到的ip就是外网ip）"></a>4.外网访问（即：第三步，窗口看到的ip就是外网ip）</h2><p>红色线部分是指IP，<a href="http://xiuxiu.free.ngrok.cc/dist/index.html" target="_blank" rel="noopener">http://xiuxiu.free.ngrok.cc/dist/index.html</a> ，dist是指项目名称，index.html页面。</p><p><img src="/images/ngrok/6.png" alt="ngrok图片"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ngrok使用的步骤&quot;&gt;&lt;a href=&quot;#ngrok使用的步骤&quot; class=&quot;headerlink&quot; title=&quot;ngrok使用的步骤&quot;&gt;&lt;/a&gt;ngrok使用的步骤&lt;/h2&gt;&lt;h2 id=&quot;1-把项目放到tomcat启动（即点击startup-bat）to
      
    
    </summary>
    
      <category term="ngrok" scheme="http://yoursite.com/categories/ngrok/"/>
    
    
      <category term="ngrok的使用" scheme="http://yoursite.com/tags/ngrok%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js的基本使用</title>
    <link href="http://yoursite.com/2018/04/20/Vue-js%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/04/20/Vue-js的基本使用/</id>
    <published>2018-04-20T09:11:46.000Z</published>
    <updated>2018-05-08T02:52:05.473Z</updated>
    
    <content type="html"><![CDATA[<h2 id="路由的使用"><a href="#路由的使用" class="headerlink" title="路由的使用"></a>路由的使用</h2><ol><li>安装路由模块</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Npm install vue-router --save</span><br></pre></td></tr></table></figure><ol start="2"><li>引入模块</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import VueRouter from ‘vue-router’</span><br></pre></td></tr></table></figure><ol start="3"><li>作为vue的插件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.use(VueRouter)</span><br></pre></td></tr></table></figure><ol start="4"><li>创建路由实例对象</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">New VueRouter(&#123;</span><br><span class="line">...配置参数</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="5"><li>注入vue选项参数</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">New Vue(&#123;</span><br><span class="line">router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="6"><li>告诉路由渲染的位置</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br></pre></td></tr></table></figure><h2 id="Hash-和-History-模式"><a href="#Hash-和-History-模式" class="headerlink" title="Hash 和 History 模式"></a>Hash 和 History 模式</h2><p>vue-router默认 hash 模式 “#” url的hash模式，mode:history模式就是正常的路径模式,history带来的便利是可以使用浏览器的前进后退功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      name: &apos;Project&apos;,</span><br><span class="line">      component: Project</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      component: Document</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="router-link的各项配置"><a href="#router-link的各项配置" class="headerlink" title="router-link的各项配置"></a>router-link的各项配置</h2><p>router-link 组件支持用户在具有路由功能的应用中（点击）导航。 通过 to 属性指定目标地址，默认渲染成带有正确链接的 a 标签，可以通过配置 tag 属性生成别的标签.。另外，当目标路由成功激活时，链接元素自动设置一个表示激活的 CSS 类名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&quot;&#123;path:&apos;/project&apos;&#125;&quot; active-class=&quot;activeClass&quot; tag=&apos;li&apos; event=&apos;mouseover&apos;&gt;</span><br><span class="line">  &lt;i class=&quot;fa fa-home&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;span&gt;project&lt;/span&gt;</span><br><span class="line">&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><p>to：目标路由的链接，此链接可以进行动态绑定的，tag：渲染成某种标签，如:li,event:默认为点击事件，也可以将其设置为鼠标移入的事件，mouseover</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&apos;index&apos; tag=&apos;li&apos; event=&apos;mouseover&apos;&gt;</span><br><span class="line">  &lt;i class=&quot;fa fa-home&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;span&gt;Home&lt;/span&gt;</span><br><span class="line">&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;App&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      index: &apos;/home&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>active-class：设置 链接激活时使用的 CSS 类名。默认值可以通过路由的构造选项 linkActiveClass 来全局配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">//路由中设置</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  linkActiveClass: &apos;is-active&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      // 路由中的别名</span><br><span class="line">      alias: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      name: &apos;Project&apos;,</span><br><span class="line">      component: Project</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      component: Document</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">//组件中进行设置</span><br><span class="line"></span><br><span class="line">&lt;router-link :to=&quot;&#123;path:&apos;/project&apos;&#125;&quot; active-class=&quot;activeClass&quot; tag=&apos;li&apos; event=&apos;mouseover&apos;&gt;</span><br><span class="line">    &lt;i class=&quot;fa fa-home&quot;&gt;&lt;/i&gt;</span><br><span class="line">    &lt;span&gt;project&lt;/span&gt;</span><br><span class="line">&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h2 id="重定向和别名"><a href="#重定向和别名" class="headerlink" title="重定向和别名"></a>重定向和别名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  linkActiveClass: &apos;is-active&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      // 路由中的别名</span><br><span class="line">      alias: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      name: &apos;Project&apos;,</span><br><span class="line">      component: Project</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      component: Document</span><br><span class="line">    &#125;,</span><br><span class="line">    // 如果没有以上的地址，就将跳转到home页面</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;*&apos;,</span><br><span class="line">      // component: Home</span><br><span class="line">      // redirect: &apos;/home&apos;</span><br><span class="line">      // redirect:&#123;path: &apos;/home&apos;&#125;</span><br><span class="line">      // redirect:&#123;name: &apos;Home&apos;&#125;</span><br><span class="line">      // 动态设置重定向的目标路径</span><br><span class="line">      redirect: (to) =&gt; &#123;</span><br><span class="line">        // 目标路由对象，就是访问的路径的路由信息</span><br><span class="line">        if (to.path === &apos;/123&apos;) &#123;</span><br><span class="line">          return &apos;/home&apos;</span><br><span class="line">        &#125; else if (to.path === &apos;/456&apos;) &#123;</span><br><span class="line">          return &#123;path: &apos;/doc&apos;&#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          return &#123;name: &apos;Project&apos;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // return &apos;/home&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="嵌套路由使用"><a href="#嵌套路由使用" class="headerlink" title="嵌套路由使用"></a>嵌套路由使用</h2><p>exact：”是否激活” 默认类名的依据是 inclusive match （全包含匹配）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&apos;/&apos; exact tag=&apos;li&apos; event=&apos;mouseover&apos;&gt;</span><br><span class="line">    &lt;i class=&quot;fa fa-home&quot;&gt;&lt;/i&gt;</span><br><span class="line">    &lt;span&gt;Home&lt;/span&gt;</span><br><span class="line">&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><p>子路由的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  linkActiveClass: &apos;is-active&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/&apos;,</span><br><span class="line">      component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      alias: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      component: Project,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;&apos;,</span><br><span class="line">          name: &apos;Project&apos;,</span><br><span class="line">          // 默认子路由，有默认子路由就不要再父路由中设置name属性</span><br><span class="line">          component: study</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;work&apos;,</span><br><span class="line">          name: &apos;work&apos;,</span><br><span class="line">          component: work</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;hobby&apos;,</span><br><span class="line">          name: &apos;hobby&apos;,</span><br><span class="line">          component: hobby</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      component: Document</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="命名视图"><a href="#命名视图" class="headerlink" title="命名视图"></a>命名视图</h2><p>子路径的格式为：<a href="http://localhost:8081/work，即在子路径中加了/，就相对于跟路径来说的，子路径不需要嵌套，但是组件需要嵌套的。。" target="_blank" rel="noopener">http://localhost:8081/work，即在子路径中加了/，就相对于跟路径来说的，子路径不需要嵌套，但是组件需要嵌套的。。</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">//vue页面的写法，动态的绑定路径</span><br><span class="line"></span><br><span class="line">&lt;ul class=&quot;nav&quot;&gt;</span><br><span class="line">    &lt;router-link :to=&quot;&#123;name: &apos;Project&apos;&#125;&quot; exact tag=&apos;li&apos;&gt;</span><br><span class="line">    &lt;a&gt;study&lt;/a&gt;</span><br><span class="line">    &lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">    &lt;router-link :to=&quot;&#123;name: &apos;work&apos;&#125;&quot; tag=&apos;li&apos;&gt;</span><br><span class="line">    &lt;a&gt;work&lt;/a&gt;</span><br><span class="line">    &lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">    &lt;router-link :to=&quot;&#123;name: &apos;hobby&apos;&#125;&quot; tag=&apos;li&apos;&gt;</span><br><span class="line">    &lt;a&gt;hobby&lt;/a&gt;</span><br><span class="line">    &lt;/router-link&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">//路由的配置</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  linkActiveClass: &apos;is-active&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/&apos;,</span><br><span class="line">      component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      alias: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      component: Project,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;&apos;,</span><br><span class="line">          name: &apos;Project&apos;,</span><br><span class="line">          component: study</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;/work&apos;,</span><br><span class="line">          name: &apos;work&apos;,</span><br><span class="line">          component: work</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;/hobby&apos;,</span><br><span class="line">          name: &apos;hobby&apos;,</span><br><span class="line">          component: hobby</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      component: Document</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>多个router-view的应用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">//app.vue</span><br><span class="line"></span><br><span class="line">&lt;router-view name=&quot;slider&quot;&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;router-view class=&quot;center&quot;&gt;&lt;/router-view&gt;</span><br><span class="line"></span><br><span class="line">//路由中的配置，一个路径对应一个组件用component，一个路径对应多个组件，用Components，默认的组件用default，其他的组件用router-view中name的值</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  mode: &apos;history&apos;,</span><br><span class="line">  linkActiveClass: &apos;is-active&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/&apos;,</span><br><span class="line">      component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/home&apos;,</span><br><span class="line">      name: &apos;Home&apos;,</span><br><span class="line">      component: Home,</span><br><span class="line">      alias: &apos;/index&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/project&apos;,</span><br><span class="line">      component: Project,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;&apos;,</span><br><span class="line">          name: &apos;Project&apos;,</span><br><span class="line">          component: study</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;/work&apos;,</span><br><span class="line">          name: &apos;work&apos;,</span><br><span class="line">          component: work</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;/hobby&apos;,</span><br><span class="line">          name: &apos;hobby&apos;,</span><br><span class="line">          component: hobby</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/doc&apos;,</span><br><span class="line">      name: &apos;Document&apos;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        default: Document,</span><br><span class="line">        slider: slider</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;路由的使用&quot;&gt;&lt;a href=&quot;#路由的使用&quot; class=&quot;headerlink&quot; title=&quot;路由的使用&quot;&gt;&lt;/a&gt;路由的使用&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装路由模块&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;t
      
    
    </summary>
    
      <category term="Vue.js的基本使用" scheme="http://yoursite.com/categories/Vue-js%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="vue.js" scheme="http://yoursite.com/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>markdown的语法</title>
    <link href="http://yoursite.com/2018/04/20/markdown%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/20/markdown的语法/</id>
    <published>2018-04-20T02:04:16.000Z</published>
    <updated>2018-05-08T02:50:45.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*斜体*或_斜体_</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><h2 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">这是一个一级标题</span><br><span class="line">============================</span><br><span class="line">这是一个二级标题</span><br><span class="line">--------------------------------------------------</span><br><span class="line"></span><br><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>语法说明：<br>[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。<a href="链接地址 “链接标题”">链接文字</a>’这样的形式。链接地址与链接标题前有一个空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到[梵居闹市](http://blog.leanote.com/freewalk)</span><br><span class="line">欢迎来到[梵居闹市](http://blog.leanote.com/freewalk &quot;梵居闹市&quot;)</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>使用 *，+，- 表示无序列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 无序列表项 一</span><br><span class="line">- 无序列表项 二</span><br><span class="line">- 无序列表项 三</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p> 语法说明：</p><p>引用需要在被引用的文本前加上&gt;符号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一个有两段文字的引用,</span><br><span class="line">&gt; 无意义的占行文字1.</span><br><span class="line">&gt; 无意义的占行文字2.</span><br><span class="line">&gt;</span><br><span class="line">&gt; 无意义的占行文字3.</span><br><span class="line">&gt; 无意义的占行文字4</span><br></pre></td></tr></table></figure><h2 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片Alt](图片地址 “图片Title”)</span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>语法说明：</p><ol><li>不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。</li><li>列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。</li><li>第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">学号|姓名|分数</span><br><span class="line">-|-|-</span><br><span class="line">小明|男|75</span><br><span class="line">小红|女|79</span><br><span class="line">小陆|男|92</span><br></pre></td></tr></table></figure><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line">***</span><br><span class="line">*****</span><br><span class="line">- - -</span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>语法说明：</p><ol><li>插入行内代码，即插入一个单词或者一句代码的情况，使用<code>code</code>这样的形式插入。</li><li>插入多行代码，可以使用缩进或者“<code>code “</code>,具体看示例。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C语言里的函数 <span class="string">`scanf()`</span> 怎么使用？</span><br></pre></td></tr></table></figure><h2 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">半方大的空白&amp;ensp;或&amp;#8194;</span><br><span class="line">全方大的空白&amp;emsp;或&amp;#8195;</span><br><span class="line">不断行的空白格&amp;nbsp;或&amp;#160;</span><br></pre></td></tr></table></figure><h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><p>语法描述：<br>在你准备跳转到的指定标题后插入锚点，然后在文档的其它地方写上连接到锚点的链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## 0. 目录&#123;#index&#125;</span><br><span class="line">跳转到[目录](#index)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;斜体和粗体&quot;&gt;&lt;a href=&quot;#斜体和粗体&quot; class=&quot;headerlink&quot; title=&quot;斜体和粗体&quot;&gt;&lt;/a&gt;斜体和粗体&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="markdown" scheme="http://yoursite.com/categories/markdown/"/>
    
    
      <category term="markdown的语法" scheme="http://yoursite.com/tags/markdown%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>vuejs项目的下载</title>
    <link href="http://yoursite.com/2018/04/20/vuejs%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%8B%E8%BD%BD/"/>
    <id>http://yoursite.com/2018/04/20/vuejs项目的下载/</id>
    <published>2018-04-20T02:04:16.000Z</published>
    <updated>2018-04-20T08:02:54.388Z</updated>
    
    <content type="html"><![CDATA[<p>下载项目：</p><ol><li><p>进入到需要下载vue的文件夹中</p></li><li><p>vue init webpack    MyPrj(打包)</p></li><li><p>进入目录，安装依赖，cd MyPrj,npm install</p></li><li><p>运行项目npm run dev</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;下载项目：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入到需要下载vue的文件夹中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vue init webpack    MyPrj(打包)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进入目录，安装依赖，cd MyPrj,npm install&lt;/p&gt;

      
    
    </summary>
    
      <category term="vue.js" scheme="http://yoursite.com/categories/vue-js/"/>
    
    
      <category term="vuejs项目的下载" scheme="http://yoursite.com/tags/vuejs%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的基本使用</title>
    <link href="http://yoursite.com/2018/04/18/Hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/04/18/Hexo的基本使用/</id>
    <published>2018-04-18T09:09:08.000Z</published>
    <updated>2018-05-08T02:54:06.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo相关的网站"><a href="#Hexo相关的网站" class="headerlink" title="Hexo相关的网站"></a>Hexo相关的网站</h2><p><a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands.html</a></p><h2 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;  hexo new post "新建一篇文章"  #新建一篇文章</span><br><span class="line">hexo generate  简写 hexo g  #生成静态文件</span><br><span class="line">hexo server #启动服务器</span><br><span class="line">hexo deploy 简写 hexo d #部署网站</span><br><span class="line">hexo clean #清理缓存文件和已生成静态的文件</span><br><span class="line">hexo version #显示hexo的版本</span><br></pre></td></tr></table></figure><h2 id="本地图片的使用"><a href="#本地图片的使用" class="headerlink" title="本地图片的使用"></a>本地图片的使用</h2><p>主配置_config.yml文件中将post_asset_folder:true</p><p>运行下面代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:<span class="comment">//github.com/CodeFalling/hexo-asset-image –save</span></span><br></pre></td></tr></table></figure><p>图片的路径写法：”/images/hexo/bg.jpg”</p><p><img src="/images/hexo/hexoimg.png" alt="hexo图片"></p><h2 id="Hexo-主题安装"><a href="#Hexo-主题安装" class="headerlink" title="Hexo 主题安装"></a>Hexo 主题安装</h2><h2 id="主题的筛选"><a href="#主题的筛选" class="headerlink" title="主题的筛选"></a>主题的筛选</h2><p>Hexo主题 ( <a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a> )页面,可以欣赏到很多很优秀的主题</p><p><img src="/images/hexo/hexotheme.png" alt="hexo主题"></p><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>点击图片,就会跳到这个主题的博客,看到实际的效果<br>下载这个主题,就点击主题文字,进入主题Github页面,然后复制下载地址</p><p><img src="/images/hexo/downloadtheme.png" alt="下载hexo主题"></p><p>进入blog目录,克隆主题到本地</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:<span class="comment">//github.com/TongchengQiu/hexo-theme-another.git themes/another</span></span><br></pre></td></tr></table></figure><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>修改blog根目录的_config.yml,将theme修改为another</p><p><em>注意: 某些主题可能需要安装Node.js的插件,在安装主题时,最好在主题的Githu主页看看安装步骤</em></p><p><img src="/images/hexo/edittheme.png" alt="hexo主题"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo相关的网站&quot;&gt;&lt;a href=&quot;#Hexo相关的网站&quot; class=&quot;headerlink&quot; title=&quot;Hexo相关的网站&quot;&gt;&lt;/a&gt;Hexo相关的网站&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/comman
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="Hexo的基本使用" scheme="http://yoursite.com/tags/Hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>GitHub的基本使用</title>
    <link href="http://yoursite.com/2018/04/18/GitHub%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/04/18/GitHub的基本使用/</id>
    <published>2018-04-18T09:09:08.000Z</published>
    <updated>2018-05-09T02:18:14.590Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git可以通过https方式和ssh方式连接服务器上的仓库。"><a href="#Git可以通过https方式和ssh方式连接服务器上的仓库。" class="headerlink" title="Git可以通过https方式和ssh方式连接服务器上的仓库。"></a>Git可以通过https方式和ssh方式连接服务器上的仓库。</h2><p>两者比较：<br>1.https： 比较方便，但是每次fetch和push代码都需要输入账号和密码，略显麻烦<br>2.ssh： 传输前压缩数据，传输效率高，不需要每次提供账号密码</p><h2 id="Git的user-name和email设置"><a href="#Git的user-name和email设置" class="headerlink" title="Git的user name和email设置"></a>Git的user name和email设置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"xxxx"</span></span><br><span class="line">$ git config --global user.email <span class="string">"xxxx@163.com"</span></span><br></pre></td></tr></table></figure><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><p>使用你注册github的邮箱生成秘钥</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"xxxx@163.com"</span></span><br></pre></td></tr></table></figure><p>中间连续3次Enter键</p><p><img src="/images/github/githubsetup.png" alt="github图片"></p><p>.ssh目录会生成id_rsa和id_rsa.pub两个文件，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人（关于RSA加密，可以自行百度，这里不详细展开）</p><h2 id="添加SSH-key到github账户"><a href="#添加SSH-key到github账户" class="headerlink" title="添加SSH key到github账户"></a>添加SSH key到github账户</h2><p>在GitHub的账户添加SSH Key，GitHub才能根据此进行加密解密，从而判断此提交是由你本人操作</p><p><img src="/images/github/githubssh.png" alt="github图片"></p><h2 id="测试SSH-key是否设置成功"><a href="#测试SSH-key是否设置成功" class="headerlink" title="测试SSH key是否设置成功"></a>测试SSH key是否设置成功</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity <span class="keyword">of</span> host <span class="string">'github.com (192.30.253.113)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br></pre></td></tr></table></figure><p>是否继续连接？输入 yes</p><p>输出如下，则表示通过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi xxxx! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell        access.</span></span><br></pre></td></tr></table></figure><h2 id="设置项目连接方式"><a href="#设置项目连接方式" class="headerlink" title="设置项目连接方式"></a>设置项目连接方式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote set-url git@github.com:oDevilo/Java-Base</span><br></pre></td></tr></table></figure><p>这里修改的是项目中 .git （隐藏）文件夹下的config文件<br>原来如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[remote <span class="string">"origin"</span>]</span><br><span class="line">    url = https:<span class="comment">//github.com/oDevilo/Java-Base</span></span><br><span class="line">    fetch = +refs/heads<span class="comment">/*:refs/remotes/origin/*</span></span><br></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[remote <span class="string">"origin"</span>]</span><br><span class="line">    url = git@github.com:oDevilo/Java-Base</span><br><span class="line">    fetch = +refs/heads<span class="comment">/*:refs/remotes/origin/*</span></span><br></pre></td></tr></table></figure><h2 id="自动部署代码的方法"><a href="#自动部署代码的方法" class="headerlink" title="自动部署代码的方法"></a>自动部署代码的方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在项目的_config.yml文件中进行设置</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:liubing273656697/liubing273656697.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line"><span class="comment">//命令</span></span><br><span class="line">hexo clean <span class="comment">//清理缓存文件和已生成静态的文件</span></span><br><span class="line">hexo d <span class="comment">//部署网站</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Git可以通过https方式和ssh方式连接服务器上的仓库。&quot;&gt;&lt;a href=&quot;#Git可以通过https方式和ssh方式连接服务器上的仓库。&quot; class=&quot;headerlink&quot; title=&quot;Git可以通过https方式和ssh方式连接服务器上的仓库。&quot;&gt;
      
    
    </summary>
    
      <category term="GitHub" scheme="http://yoursite.com/categories/GitHub/"/>
    
    
      <category term="GitHub的基本使用" scheme="http://yoursite.com/tags/GitHub%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>categories</title>
    <link href="http://yoursite.com/2018/04/13/categories/"/>
    <id>http://yoursite.com/2018/04/13/categories/</id>
    <published>2018-04-13T09:27:01.000Z</published>
    <updated>2018-04-13T09:27:01.549Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>字体小图标的制作方法</title>
    <link href="http://yoursite.com/2017/04/09/%E5%AD%97%E4%BD%93%E5%B0%8F%E5%9B%BE%E6%A0%87%E7%9A%84%E5%88%B6%E4%BD%9C/"/>
    <id>http://yoursite.com/2017/04/09/字体小图标的制作/</id>
    <published>2017-04-09T10:49:26.000Z</published>
    <updated>2018-05-08T05:52:27.361Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字体小图标的介绍"><a href="#字体小图标的介绍" class="headerlink" title="字体小图标的介绍"></a>字体小图标的介绍</h2><p>Font Awesome <a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">（http://fontawesome.dashgame.com/)</a>为您提供可缩放的矢量图标，可以使用CSS所提供的所有特性对它们进行更改，包括：大小、颜色、阴影或者其它任何支持的效果。Font Awesome提供的字体小图标不一定能够满足开发项目的需求，因此我们需要根据自身的具体要求进行设计新的小图标。</p><h2 id="制作-png格式图片"><a href="#制作-png格式图片" class="headerlink" title="制作.png格式图片"></a>制作.png格式图片</h2><p>1) 用PS设置符合自己需求的png小图标<br>2) 在网站上面查找符合需求的png图片 相关网站：<a href="http://www.easyicon.net/iconsearch/light/3/" target="_blank" rel="noopener">http://www.easyicon.net/iconsearch/light/3/</a></p><h2 id="将-png格式图片转化为SVG格式"><a href="#将-png格式图片转化为SVG格式" class="headerlink" title="将.png格式图片转化为SVG格式"></a>将.png格式图片转化为SVG格式</h2><p>1）进入<a href="https://image.online-convert.com/convert-to-svg" target="_blank" rel="noopener">https://image.online-convert.com/convert-to-svg</a> 页面<br>2）点击上传，上传对应的图片</p><p><img src="/images/icon/pngtosvg.png" alt="Alt text"></p><p>3.下载转化为svg格式的文件</p><h2 id="将SVG格式文件转化为字体小图标"><a href="#将SVG格式文件转化为字体小图标" class="headerlink" title="将SVG格式文件转化为字体小图标"></a>将SVG格式文件转化为字体小图标</h2><p>1）进入<a href="https://icomoon.io/app/#/select/font" target="_blank" rel="noopener">https://icomoon.io/app/#/select/font</a> 页面<br>2) 导入SVG图片,并且选中需要生成的小图标</p><p><img src="/images/icon/svgtofont.png" alt="Alt text"></p><p>3）生成自己小图标,选中下方的download标签页,设置字体小图标的前缀名，避免与bootstrap中的冲突，点击download即可以进行下载字体小图标</p><p><img src="/images/icon/fontsetting.png" alt="Alt text"></p><h2 id="将制作后的小图标应用于项目"><a href="#将制作后的小图标应用于项目" class="headerlink" title="将制作后的小图标应用于项目"></a>将制作后的小图标应用于项目</h2><p>1）新建一个文件夹如icomoon，将下面的style.css和font文件夹拷贝到icomoon文件夹下面</p><p><img src="/images/icon/fontlist.png" alt="Alt text"></p><p>2）在页面上引入style.css即可使用新建的字体小图标<br>3）字体小图标的使用格式</p><p><pre><br><code><br>&lt;i class=”iconnew-flightTop”&gt;&lt;/i&gt;<br></code><br></pre></p><div class="left"><img src="/images/icon/fontformat.png" alt="Alt text"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;字体小图标的介绍&quot;&gt;&lt;a href=&quot;#字体小图标的介绍&quot; class=&quot;headerlink&quot; title=&quot;字体小图标的介绍&quot;&gt;&lt;/a&gt;字体小图标的介绍&lt;/h2&gt;&lt;p&gt;Font Awesome &lt;a href=&quot;http://fontawesome.dashg
      
    
    </summary>
    
      <category term="bootstrap" scheme="http://yoursite.com/categories/bootstrap/"/>
    
    
      <category term="字体小图标的制作方法" scheme="http://yoursite.com/tags/%E5%AD%97%E4%BD%93%E5%B0%8F%E5%9B%BE%E6%A0%87%E7%9A%84%E5%88%B6%E4%BD%9C%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
